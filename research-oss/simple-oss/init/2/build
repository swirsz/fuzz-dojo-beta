#!/opt/pwn.college/bash
if [ "$?" -gt 0 ]; then
    exit 1
fi
. /usr/local/sbin/e
export LABEL=$1
export PROJECT_NAME=usbguard
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
#----------------------------------------------------------------------
    #apt-get update && apt-get install -y make autoconf automake libtool pkg-config libxml2-utils1 libxml2-dev xsltproc \
    #  libprotobuf-dev protobuf-compiler libdbus-1-dev libdbus-glib-1-dev libgio2.0-cil-dev libgcrypt20-dev \
    #  libpolkit-gobject-1-dev libseccomp-dev libcap-ng-dev

    #git clone https://github.com/ClusterLabs/libqb && cd libqb && \
    #    ./autogen.sh && ./configure && make && make install
    cd $SRC
    rm -rf $PROJECT_NAME
    rm -rf inspector

    #git clone --recurse-submodules --depth 1 https://github.com/USBGuard/usbguard usbguard
    cp -r /downloads/usbguard $SRC
    cp -r /downloads/libqb $SRC
    cd $SRC/libqb
    ./autogen.sh
    ./configure 
    make 
    make install 
    cd /

    # This is to fix Fuzz Introspector build by using LLVM old pass manager
    # re https://github.com/ossf/fuzz-introspector/issues/305
    export OLD_LLVMPASS=1

    cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/
#----------------------------------------------------------------------
    build-cleanup-oss
fi
build-srcfolders
if [ "$3" == "skip" ]; then
    rm -rf /tmp/build.lck
else
    mv /src-$LABEL /src

    cd $SRC/$PROJECT_NAME
    if [ "$4" = "understanding" ]; then
        understanding $2 $3
    elif [ "$4" = "planning" ]; then
        planning $2 $3
    else
        if [ $(echo -n "$2" | sha256sum | cut -d' ' -f1) != "2ed73ee0d7ad2fd8b8e57fc154cfc26f3948ed32b2844b34479333e5b07712a5" ]; then
            oss_help
            exit 1
        fi
        fuzzlog
        compile
        drivers > /dev/null
    fi
    mv /src /src-$LABEL
fi
