#!/opt/pwn.college/bash
if [ -z "$(find /out -mindepth 1 -maxdepth 1)" ]; then
    echo "Run /challenge/build first"
else
. /usr/local/sbin/e
LABEL=$1
PROJECT_NAME=pycryptodome
SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    SANITIZER='none'
    LABEL='none'
fi

SRC=/src-$LABEL

if [ "$LABEL" = "none" ]; then
    FLAGS=""
elif [ "$LABEL" = "address" ]; then
    FLAGS=$SANITIZER_FLAGS_address
elif [ "$LABEL" = "memory" ]; then
    FLAGS=$SANITIZER_FLAGS_memory
elif [ "$LABEL" = "undefined" ]; then
    FLAGS=$SANITIZER_FLAGS_undefined
elif [ "$LABEL" = "thread" ]; then
    FLAGS=$SANITIZER_FLAGS_thread
fi
set -ex


cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.cc $SRC

cd $SRC/$PROJECT_NAME

clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=fuzzer-no-link $FLAGS -stdlib=libc++ -I $SRC/pycryptodome/src -I $SRC/pycryptodome$SRC/libtom -D HAVE_STDINT_H -D HAVE_MEMALIGN -D HAVE_INTRIN_H -D SYS_BITS=64 -maes -msse2 -mpclmul $SRC/newfuzzer.cc -o /out/newfuzzer -fsanitize=fuzzer /work/libpycryptodome.a

drivers
fi
