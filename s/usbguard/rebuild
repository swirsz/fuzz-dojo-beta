#!/opt/pwn.college/bash
if [ -z "$(find /out -mindepth 1 -maxdepth 1)" ]; then
    echo "Run /challenge/build first"
else
. /usr/local/sbin/e
LABEL=$1
export PROJECT_NAME=usbguard
SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    SANITIZER='none'
    LABEL='none'
fi

SRC=/src-$LABEL

if [ "$LABEL" = "none" ]; then
    FLAGS=""
elif [ "$LABEL" = "address" ]; then
    FLAGS=$SANITIZER_FLAGS_address
elif [ "$LABEL" = "memory" ]; then
    FLAGS=$SANITIZER_FLAGS_memory
elif [ "$LABEL" = "undefined" ]; then
    FLAGS=$SANITIZER_FLAGS_undefined
elif [ "$LABEL" = "thread" ]; then
    FLAGS=$SANITIZER_FLAGS_thread
fi
set -x

cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.cpp $SRC/$PROJECT_NAME/src/Tests/Fuzzers
cp /home/hacker/fuzz-dojo/$PROJECT_NAME/Makefile.am $SRC/$PROJECT_NAME/src/Tests/Fuzzers

mv /src-$LABEL /src
SRC=/src
cd $SRC/$PROJECT_NAME

make -j32 -C src/Tests/Fuzzers fuzzer-new fuzzer-uevent fuzzer-rules fuzzer-usb-descriptor

drivers
fi
mv /src /src-$LABEL
