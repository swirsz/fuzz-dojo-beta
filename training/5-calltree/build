#!/opt/pwn.college/bash
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=bzip2
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'

if [ ! -d "/src-orig" ]; then
    rm -rf $SRC/$PROJECT_NAME
    rm -rf $SRC/$PROJECT_NAME-tests
    #apt-get update && apt-get install -y make autoconf automake libtool wget
    #git clone https://github.com/swirsz/bzip2
    #git clone git://sourceware.org/git/bzip2-tests.git
    cp -r /opt/fuzz-targets/bzip2 $SRC
    cp -r /opt/fuzz-targets/bzip2-tests $SRC

    cp /challenge/newfuzzer.c $SRC/newfuzzer.c

    cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/build.sh $SRC/
    cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/*.c $SRC/

    echo Please wait, creating /src-orig
    chown -hR hacker:hacker $SRC/$PROJECT_NAME
    mv /src /src-orig
fi
if [ ! -d "/src-$SANITIZER" ]; then
    echo Please wait, creating /src-$SANITIZER
    cp -r /src-orig /src-$SANITIZER
fi
mv /src-$SANITIZER /src

cd $SRC
if [ ! -d "/home/hacker/fuzz-dojo/training-calltree" ]; then
   mkdir /home/hacker/fuzz-dojo/training-calltree
   cp $SRC/*.c /home/hacker/fuzz-dojo/training-calltree
   cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/build.sh /home/hacker/fuzz-dojo/training-calltree
   chown -R hacker /home/hacker/fuzz-dojo/training-calltree
else
   cp /home/hacker/fuzz-dojo/training-calltree/*.c $SRC
   cp /home/hacker/fuzz-dojo/training-calltree/build.sh $SRC
fi

mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-training-calltree /home/hacker/fuzz-dojo/training-calltree
sudo --preserve-env compile
drivers
chown -hR hacker:hacker /home/hacker/fuzz-dojo
chown -hR hacker:hacker $SRC/$PROJECT_NAME
mv /src /src-$SANITIZER
