#!/opt/pwn.college/bash 
. /usr/local/sbin/e
export PROJECT_NAME=avahi
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update && \
#   apt-get install -y autoconf gettext libtool m4 automake pkg-config libexpat-dev libexpat-dev:i386
#git clone --depth 1 https://github.com/swirsz/avahi
#git clone --depth 1 https://github.com/lathiat/avahi
cp -r /opt/fuzz-targets/avahi /src/avahi 

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/
cp /challenge/.fuzz-packet_seed_corpus.zip $OUT/fuzz-packet_seed_corpus.zip
patch -tuN /src/avahi/fuzz/oss-fuzz.sh -i /challenge/.oss-fuzz.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/training-newdriver" ]; then
   mkdir /home/hacker/training-newdriver
   cp $SRC/$PROJECT_NAME/fuzz/fuzz-consume-record.c $SRC/$PROJECT_NAME/fuzz/fuzz-newfuzzer.c
   cp $SRC/$PROJECT_NAME/fuzz/*.c /home/hacker/training-newdriver
   cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh /home/hacker/training-newdriver
   chown -R hacker /home/hacker/training-newdriver
else
   cp /home/hacker/training-newdriver/*.c $SRC/$PROJECT_NAME/fuzz
   cp /home/hacker/training-newdriver/build.sh $SRC
fi
sudo --preserve-env compile
drivers
