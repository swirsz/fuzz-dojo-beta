#!/opt/pwn.college/bash
. /usr/local/sbin/eafl
export PROJECT_NAME=cpython3
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get install -y build-essential libncursesw5-dev libreadline-dev libssl-dev libgdbm-dev \
#	libc6-dev libsqlite3-dev tk-dev libbz2-dev zlib1g-dev libffi-dev

#git clone https://github.com/python/cpython.git cpython3
cp -r /opt/fuzz-targets/cpython3 /src/cpython3

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

#patch -tuN /src/build.sh -i /challenge/.build.patch -r -
cd $SRC/cpython3
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/zzzzzzzzzz.c $SRC/newfuzzer.c
   cp $SRC/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/*.cc /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC
   cp /home/hacker/$PROJECT_NAME/*.cc $SRC
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
sudo --preserve-env compile