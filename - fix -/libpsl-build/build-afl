#!/opt/pwn.college/bash
. /usr/local/sbin/eafl
export PROJECT_NAME=libpsl
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

apt-get update && apt-get install -y \
 make \
 pkg-config \
 autogen \
 autopoint \
 autoconf \
 autoconf-archive \
 automake \
 libtool \
 texinfo \
 bison \
 gettext \
 gengetopt \
 curl \
 gperf \
 wget \
 python

rm -rf /usr/include/xlocale.h
git clone git://git.savannah.gnu.org/gnulib.git
git clone --depth=1 https://git.savannah.gnu.org/git/libunistring.git
git clone --depth=1 https://gitlab.com/libidn/libidn2.git
git clone --depth=1 https://git.savannah.gnu.org/git/libidn.git
wget https://github.com/unicode-org/icu/releases/download/release-59-2/icu4c-59_2-src.tgz && tar xvfz icu4c-59_2-src.tgz

git clone --depth=1 --recursive https://github.com/rockdaboot/libpsl.git

cp /opt/oss-fuzz/projects/$PROJECT_NAME/config.site $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/md5sum $SRC/

#patch -tuN /src/build.sh -i /challenge/.build.patch -r -
cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/yyyyyyyyyyyy/zzzzzzzzzzzzzzzzz.c $SRC/$PROJECT_NAME/yyyyyyyyyyyy/newfuzzer.c
   cp $SRC/$PROJECT_NAME/yyyyyyyyyyyy/*.c /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC/$PROJECT_NAME/yyyyyyyyyyyy
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
sudo --preserve-env compile
