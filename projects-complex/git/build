#!/opt/pwn.college/bash
echo 9 > /tmp/initial
echo 14 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=git
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC
rm -rf /src/$PROJECT_NAME
rm -rf /src/zlib
#apt-get update && apt-get install --no-install-recommends -y cvs cvsps gettext libcgi-pm-perl libcurl4-gnutls-dev \
# libdbd-sqlite3-perl liberror-perl libexpat1-dev libhttp-date-perl libio-pty-perl libmailtools-perl libpcre2-dev \
# libpcre3-dev libsvn-perl perl-modules libyaml-perl libz-dev python subversion tcl unzip asciidoc docbook-xsl xmlto libssl-dev zip

#git clone https://github.com/git/git git
cp -r /opt/fuzz-targets/git /src/
cp -r /opt/fuzz-targets/zlib /src/
cd $SRC/$PROJECT_NAME
#git checkout origin/next
#git pull origin next
mkdir -p $SRC/$PROJECT_NAME/oss-fuzz
cp /opt/oss-fuzz/projects/$PROJECT_NAME/fuzz-* $SRC/$PROJECT_NAME/oss-fuzz
cp /opt/oss-fuzz/projects/$PROJECT_NAME/Makefile.diff $SRC/$PROJECT_NAME

cd $SRC/$PROJECT_NAME
git apply Makefile.diff
# This is to fix Fuzz Introspector build by using LLVM old pass manager
# re https://github.com/ossf/fuzz-introspector/issues/305
export OLD_LLVMPASS=1

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

patch -tuN /src/build.sh -i /challenge/.build.patch -r -
patch -tuN /src/git/Makefile -i /challenge/.Makefile.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/oss-fuzz/fuzz-cmd-diff.c $SRC/$PROJECT_NAME/oss-fuzz/fuzz-new.c
   cp $SRC/$PROJECT_NAME/oss-fuzz/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/Makefile /home/hacker/$PROJECT_NAME
   #cp $SRC/$PROJECT_NAME/oss-fuzz/.depend/fuzz-new.o.d /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC/$PROJECT_NAME/oss-fuzz
   cp /home/hacker/$PROJECT_NAME/Makefile $SRC/$PROJECT_NAME
   #mkdir -p  $SRC/$PROJECT_NAME/oss-fuzz/.depend
   #cp /home/hacker/$PROJECT_NAME/fuzz-new.o.d $SRC/$PROJECT_NAME/oss-fuzz/.depend
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.vnc/$PROJECT_NAME-$(TZ=US/Arizona date +"%F--%H-%M-%S") /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers