#!/opt/pwn.college/bash
echo 34 > /tmp/initial
echo 39 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=speex
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf $SRC/$PROJECT_NAME
#apt-get update && apt-get install -y make autoconf libtool pkg-config wget
#git clone --depth 1 https://gitlab.xiph.org/xiph/ogg.git
#git clone --depth 1 https://gitlab.xiph.org/xiph/speex.git speex
cp -r /opt/fuzz-targets/ogg $SRC
cp -r /opt/fuzz-targets/speex $SRC

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
patch -tuN $SRC/speex$SRC/generate-samples.sh -i /challenge/.generate-samples.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/contrib/oss-fuzz/speexdec_fuzzer.cc $SRC/$PROJECT_NAME/contrib/oss-fuzz/new_fuzzer.cc
   cp $SRC/$PROJECT_NAME/contrib/oss-fuzz/*.cc /home/hacker/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.cc $SRC/$PROJECT_NAME/contrib/oss-fuzz
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers

