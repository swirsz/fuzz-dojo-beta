#!/opt/pwn.college/bash
echo 27 > /tmp/initial
echo 32 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=libssh
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf $SRC/$PROJECT_NAME
#apt-get update && apt-get install -y cmake zlib1g-dev libssl-dev
#git clone --depth=1 https://git.libssh.org/projects/libssh.git
cp -r /opt/fuzz-targets/libssh $SRC

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

patch -tuN $SRC/$PROJECT_NAME/tests/fuzz/CMakeLists.txt -i /challenge/.CMakeLists.patch -r -
cp -r $SRC/libssh/tests/fuzz/ssh_client_fuzzer_corpus/ $SRC/libssh/tests/fuzz/ssh_new_fuzzer_corpus

cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/tests/fuzz/ssh_client_fuzzer.c $SRC/$PROJECT_NAME/tests/fuzz/ssh_new_fuzzer.c
   cp $SRC/$PROJECT_NAME/tests/fuzz/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/tests/fuzz/CMakeLists.txt /home/hacker/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC/$PROJECT_NAME/tests/fuzz
   cp /home/hacker/$PROJECT_NAME/CMakeLists.txt $SRC/$PROJECT_NAME/tests/fuzz
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers
