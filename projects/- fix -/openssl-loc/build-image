#!/opt/pwn.college/bash
. /usr/local/sbin/e
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'

mkdir $SRC/fuzz
mv $SRC/$PROJECT_NAME/fuzz/*.c $SRC/fuzz
rm -rf $SRC/$PROJECT_NAME

apt-get install -y make
git clone --depth 1 https://github.com/openssl/openssl.git $SRC/openssl
cd $SRC/openssl/ && git submodule update --init fuzz/corpora
cd $SRC
git clone --depth 1 --branch OpenSSL_1_1_1-stable https://github.com/openssl/openssl.git openssl111
git clone --depth 1 --branch openssl-3.0 https://github.com/openssl/openssl.git openssl30
export AFL_SKIP_OSSFUZZ=1
export AFL_LLVM_MODE_WORKAROUND=0
cp /opt/oss-fuzz/projects/openssl/build.sh $SRC/
cp /opt/oss-fuzz/projects/openssl/*.options $SRC/

cp -f $SRC/fuzz/* $SRC/$PROJECT_NAME/fuzz 
rm -rf $SRC/fuzz/

#patch -tuN /src/build.sh -i /challenge/build.patch -r -
cd $SRC/openssl
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/yyyyyyyyyyyy/zzzzzzzzzzzzzzzzz.c $SRC/$PROJECT_NAME/yyyyyyyyyyyy/newfuzzer.c
   cp $SRC/$PROJECT_NAME/yyyyyyyyyyyy/*.c /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC/$PROJECT_NAME/yyyyyyyyyyyy
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
sudo --preserve-env compile
