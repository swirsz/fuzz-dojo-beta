#!/opt/pwn.college/bash
. /usr/local/sbin/e
export LABEL=$1
export PROJECT_NAME=fmt
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
#----------------------------------------------------------------------

    #apt-get update && apt-get install -y cmake ninja-build

    rm -rf $PROJECT_NAME
    #git clone --depth 1 --branch master https://github.com/fmtlib/fmt.git
    cp -r /downloads/fmt $SRC/

    cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

    cp $SRC/$PROJECT_NAME/test/fuzzing/one-arg.cc $SRC/$PROJECT_NAME/test/fuzzing/newfuzzer.cc
    patch -tuN $SRC/$PROJECT_NAME/test/fuzzing/CMakeLists.txt -i /challenge/.CMakeLists.patch -r -
#----------------------------------------------------------------------
    build-cleanup
fi
build-srcfolders
mv /src-$LABEL /src
rm -rf $SRC/$PROJECT_NAME/build

cd $SRC/$PROJECT_NAME
#----------------------------------------------------------------------
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/test/fuzzing/CMakeLists.txt /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/test/fuzzing/*.h /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/test/fuzzing/*.cc /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/* $SRC/$PROJECT_NAME/test/fuzzing
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
#----------------------------------------------------------------------
fuzzlog
compile
drivers
mv /src /src-$LABEL