#!/opt/pwn.college/bash
set -e
. /usr/local/sbin/e
export LABEL=$1
export PROJECT_NAME=xvid
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
#----------------------------------------------------------------------
    #apt-get update && apt-get install -y make autoconf automake libtool subversion
    #svn checkout http://svn.xvid.org/trunk --username anonymous --password "" --non-interactive --no-auth-cache
    #git clone --depth 1 https://github.com/guidovranken/fuzzing-headers.git
    #git clone --depth 1 https://github.com/guidovranken/oss-fuzz-fuzzers.git

    cp -r /downloads/trunk $SRC
    cp -r /downloads/fuzzing-headers $SRC
    cp -r /downloads/oss-fuzz-fuzzers $SRC

    cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/
    cp $SRC/oss-fuzz-fuzzers/xvid/fuzzer.cpp $SRC/oss-fuzz-fuzzers/xvid/newfuzzer.cpp

    patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -

#----------------------------------------------------------------------
    build-cleanup
fi
build-srcfolders

mv /src-$LABEL /src
cd $SRC
rm -rf xvidcore-install

#----------------------------------------------------------------------
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   cp -r $SRC/oss-fuzz-fuzzers/xvid /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   rm -rf $SRC/oss-fuzz-fuzzers/xvid
   cp -r /home/hacker/fuzz-dojo/$PROJECT_NAME $SRC/oss-fuzz-fuzzers/xvid
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
#----------------------------------------------------------------------
fuzzlog
compile
drivers
mv /src /src-$LABEL