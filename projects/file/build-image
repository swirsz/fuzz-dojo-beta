#!/bin/sh
. /usr/local/sbin/e
export PROJECT_NAME=file
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update && apt-get install -y zzzzzzzzzz
#apt-get update && apt install -y make autoconf automake libtool shtool
#apt-get update && apt install -y libbz2-dev      liblzma-dev      zlib1g-dev      libzstd-dev      liblz4-dev
#apt-get update && apt install -y libbz2-dev:i386 liblzma-dev:i386 zlib1g-dev:i386 libzstd-dev:i386 liblz4-dev:i386 

rm -rf $PROJECT_NAME
git clone --depth 1 https://github.com/file/file.git

# Supplement file's existing test files
git clone --depth 1 https://github.com/DavidKorczynski/binary-samples.git
git clone --depth 1 https://github.com/corkami/pocs

cp /opt/oss-fuzz/projects/$PROJECT_NAME/fuzzer_temp_file.h $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/magic_fuzzer.cc $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/magic_fuzzer_loaddb.cc $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/magic_fuzzer_fd.cc $SRC/

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/zzzzzzzzzz.c $SRC/newfuzzer.c
   cp $SRC/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/*.cc /home/hacker/$PROJECT_NAME
   cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC
   cp /home/hacker/$PROJECT_NAME/*.cc $SRC
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
#patch -tuN /src/build.sh -i /challenge/build.patch -r -
compile