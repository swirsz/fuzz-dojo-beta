#!/bin/sh
. /usr/local/sbin/e
export PROJECT_NAME=nginx
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf nginx
#apt-get update && apt-get install -y libpcre3-dev zlib1g-dev mercurial ninja-build cmake liblzma-dev libz-dev binutils libtool
hg clone http://hg.nginx.org/nginx/
git clone --depth 1 https://github.com/google/libprotobuf-mutator.git
git clone --depth 1 https://github.com/google/fuzzer-test-suite
mkdir LPM && cd LPM && cmake ../libprotobuf-mutator -GNinja -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON -DLIB_PROTO_MUTATOR_TESTING=OFF -DCMAKE_BUILD_TYPE=Release && ninja
cd $SRC

cp -r /opt/oss-fuzz/projects/$PROJECT_NAME/fuzz $SRC/fuzz

cp /opt/oss-fuzz/projects/$PROJECT_NAME/add_fuzzers.diff $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/make_fuzzers $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

#patch -tuN /src/build.sh -i /challenge/build.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/zzzzzzzzzz.c $SRC/newfuzzer.c
   cp $SRC/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/*.cc /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC
   cp /home/hacker/$PROJECT_NAME/*.cc $SRC
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
compile
