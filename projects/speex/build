#!/opt/pwn.college/bash
. /usr/local/sbin/e
if [ "$?" -gt 0 ]; then
    exit 1
fi
export LABEL=$1
export PROJECT_NAME=speex
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
#----------------------------------------------------------------------
    rm -rf $SRC/$PROJECT_NAME
    #apt-get update && apt-get install -y make autoconf libtool pkg-config wget
    #git clone --depth 1 https://gitlab.xiph.org/xiph/ogg.git
    #git clone --depth 1 https://gitlab.xiph.org/xiph/speex.git speex
    cp -r /downloads/ogg $SRC
    cp -r /downloads/speex $SRC

    cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/
    rm -rf /opt/oss-fuzz &
    cp $SRC/$PROJECT_NAME/contrib/oss-fuzz/speexdec_fuzzer.cc $SRC/$PROJECT_NAME/contrib/oss-fuzz/new_fuzzer.cc

    patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
    patch -tuN $SRC/speex$SRC/generate-samples.sh -i /challenge/.generate-samples.patch -r -
#----------------------------------------------------------------------
    build-cleanup2
    mv /src /src-orig
fi
build-srcfolders
mv /src-$LABEL /src

cd $SRC/$PROJECT_NAME
#----------------------------------------------------------------------
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/contrib/oss-fuzz/*.cc /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.cc $SRC/$PROJECT_NAME/contrib/oss-fuzz
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
#----------------------------------------------------------------------
if [ "$4" = "understanding" ]; then
    understanding $2 $3
elif [ "$4" = "planning" ]; then
    planning $2 $3
else
    fuzzlog
    compile
    drivers
fi
mv /src /src-$LABEL

