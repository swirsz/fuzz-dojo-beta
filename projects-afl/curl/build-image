#!/opt/pwn.college/bash
. /usr/local/sbin/eafl
export PROJECT_NAME=curl
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf $SRC/curl
rm -rf $SRC/curl_install
rm -rf $SRC/curl_fuzzer
rm -rf $SRC/nghttp2
rm -rf $SRC/openssl
rm -rf $SRC/zlib
#git clone --depth 1 https://github.com/curl/curl.git /src/$PROJECT_NAME
#git clone --depth 1 https://github.com/curl/curl-fuzzer.git /src/curl_fuzzer
cp -r /opt/fuzz-targets/curl /src/curl
cp -r /opt/fuzz-targets/curl_fuzzer /src/curl_fuzzer

# Use curl-fuzzer's scripts to get latest dependencies.
#$SRC/curl_fuzzer/scripts/ossfuzz.sh

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

#patch -tuN /src/build.sh -i /challenge/.build.patch -r -
cd $SRC/curl_fuzzer
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/curl_fuzzer/curl_fuzzer.cc $SRC/curl_fuzzer/new_fuzzer.cc
   cp $SRC/curl_fuzzer/*.cc /home/hacker/$PROJECT_NAME
   cp $SRC/curl_fuzzer/*.sh /home/hacker/$PROJECT_NAME
   cp $SRC/curl_fuzzer/*.py /home/hacker/$PROJECT_NAME
   cp $SRC/curl_fuzzer/Makefile.am /home/hacker/$PROJECT_NAME
   cp $SRC/curl_fuzzer/scripts/fuzz_targets /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/* $SRC/curl_fuzzer
fi
sudo --preserve-env compile
drivers
