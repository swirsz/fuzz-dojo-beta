#!/opt/pwn.college/bash
if [ "$?" -gt 0 ]; then
    exit 1
fi
export LABEL=$1
export PROJECT_NAME=sqlite3
export SANITIZER=$1
. /usr/local/sbin/e
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
#----------------------------------------------------------------------
    echo Installing pre-reqs for $PROJECT_NAME
    echo
    sleep 2
    #rm -rf $PROJECT_NAME
    #apt-get update && apt-get install -y make autoconf automake libtool curl tcl zlib1g-dev

    # We won't be able to poll fossil for changes, so this will build
    # only once a day.
    #mkdir $SRC/sqlite3 && \
        #cd $SRC/sqlite3 && \
        #cp -r /downloads/sqlite3.tar.gz $SRC/sqlite3 && \
        #tar xzf sqlite3.tar.gz
        #curl 'https://www.sqlite.org$SRC/tarball?uuid=trunk' -o sqlite3.tar.gz && \
        #tar xzf sqlite3.tar.gz
    #cp -rf /downloads/sqlite3/. $SRC/sqlite3
    mkdir -p $SRC/sqlite3
    cd $SRC/sqlite3
    tar xzf /challenge/sqlite3.tar.gz
       
    find $SRC/sqlite3 -name "*.test" | xargs zip $SRC/ossfuzz_seed_corpus.zip
    cd /
    cp /opt/oss-fuzz/projects/$PROJECT_NAME/*.dict $SRC/
    cp /opt/oss-fuzz/projects/$PROJECT_NAME/*.options $SRC/
    cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/
#----------------------------------------------------------------------
    build-cleanup-oss
fi
build-srcfolders
if [ "$4" == "skip" ]; then
    chown -hR hacker:hacker /src-$LABEL /out
    rm -rf /tmp/build.lck
else
    mv /src-$LABEL /src

    cd $SRC/$PROJECT_NAME
    if [ "$4" = "understanding" ]; then
        understanding_oss $2 $3
    elif [ "$4" = "planning" ]; then
        planning $2 $3
    else
        if [ $(echo -n "$2" | sha256sum | cut -d' ' -f1) != "2ed73ee0d7ad2fd8b8e57fc154cfc26f3948ed32b2844b34479333e5b07712a5" ]; then
            oss_help
            rm -rf /tmp/build.lck
            mv /src /src-$LABEL
            exit 1
        elif [ "$3" != "$PROJECT_NAME" ]; then
            echo "[ERROR] Project $3 not available in this challenge"
            rm -rf /tmp/build.lck
            mv /src /src-$LABEL
            exit 1
        fi
        fuzzlog_oss $SRC/$PROJECT_NAME/fuzz/*
        compile
        drivers > /dev/null
    fi
    mv /src /src-$LABEL
fi
