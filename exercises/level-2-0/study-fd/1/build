#!/opt/pwn.college/bash
. /usr/local/sbin/e
if [ "$?" -gt 0 ]; then
    exit 1
fi
export LABEL=$1
export PROJECT_NAME=guetzli
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
#---------------------------------------------------------------------- 
    #apt-get update && apt-get install -y make autoconf automake libtool libpng-dev pkg-config curl

    #mkdir afl-testcases
    #cd afl-testcases/ && curl https://lcamtuf.coredump.cx/afl/demo/afl_testcases.tgz | tar -xz
    echo
    echo Installing pre-reqs for $PROJECT_NAME
    echo
    cd $SRC
    cp -r /downloads/afl-testcases $SRC

    zip guetzli_fuzzer_seed_corpus.zip afl-testcases/jpeg/full/images/* afl-testcases/jpeg_turbo/full/images/*

    #git clone --depth=1 https://github.com/google/guetzli 
    cp -r /downloads/guetzli $SRC

    cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

    patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
    cp $SRC/$PROJECT_NAME/fuzz_target.cc $SRC/$PROJECT_NAME/fuzz_newfuzzer.cc
    cd /
#----------------------------------------------------------------------
    build-cleanup
fi
build-srcfolders
mv /src-$LABEL /src

cd $SRC/$PROJECT_NAME
#----------------------------------------------------------------------
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/*.cc /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.cc $SRC/$PROJECT_NAME
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
#----------------------------------------------------------------------
if [ "$4" = "understanding" ]; then
    understanding $2 $3
elif [ "$4" = "planning" ]; then
    planning $2 $3
else
    fuzzlog
    compile
    drivers
fi
mv /src /src-$LABEL
