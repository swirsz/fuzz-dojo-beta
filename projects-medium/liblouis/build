#!/opt/pwn.college/bash
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=liblouis
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update && apt-get install -y make autoconf automake libtool \
#  pkg-config zlib1g-dev libpci-dev
#git clone --depth 1 https://github.com/liblouis/liblouis

cp -r /opt/fuzz-targets/liblouis $SRC

cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/build.sh $SRC/
patch -tuN $SRC/liblouis/tests/fuzzing/build.sh -i /challenge/.build.patch -r -

cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/tests/fuzzing/fuzz_backtranslate.c $SRC/$PROJECT_NAME/tests/fuzzing/fuzz_newfuzzer.c
   cp $SRC/$PROJECT_NAME/tests/fuzzing/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/liblouis/tests/fuzzing/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC/$PROJECT_NAME/tests/fuzzing
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC/liblouis/tests/fuzzing
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers
