#!/opt/pwn.college/bash
echo 31 > /tmp/initial
echo 36 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=sqlite3
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC
rm -rf $PROJECT_NAME
#apt-get update && apt-get install -y make autoconf automake libtool curl tcl zlib1g-dev

# We won't be able to poll fossil for changes, so this will build
# only once a day.
mkdir $SRC/sqlite3 && \
    cd $SRC/sqlite3 && \
    cp -r /opt/fuzz-targets/sqlite3.tar.gz $SRC/sqlite3 && \
    tar xzf sqlite3.tar.gz
    #curl 'https://www.sqlite.org$SRC/tarball?uuid=trunk' -o sqlite3.tar.gz && \
    #tar xzf sqlite3.tar.gz

cd $SRC
find $SRC/sqlite3 -name "*.test" | xargs zip $SRC/ossfuzz_seed_corpus.zip

cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/*.dict $SRC/
cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/*.options $SRC/
cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/build.sh $SRC/

patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/sqlite3/test/ossfuzz.c $SRC/sqlite3/test/newfuzzer.c
   cp $SRC/sqlite3/test/ossfuzz.options $SRC/sqlite3/test/newfuzzer.options
   cp $SRC/sqlite3/test/ossfuzz_seed_corpus.zip $SRC/sqlite3/test/newfuzzer_seed_corpus.zip
   cp $SRC/sqlite3/test/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/sqlite3/test/*.options /home/hacker/$PROJECT_NAME
   cp $SRC/sqlite3/test/*.zip /home/hacker/$PROJECT_NAME
   cp $SRC/sqlite3/main.mk  /home/hacker/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.zip $SRC/sqlite3/test
   cp /home/hacker/$PROJECT_NAME/*.options $SRC/sqlite3/test
   cp /home/hacker/$PROJECT_NAME/*.c $SRC/sqlite3/test
   cp /home/hacker/$PROJECT_NAME/main.mk  $SRC/sqlite3/
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers
