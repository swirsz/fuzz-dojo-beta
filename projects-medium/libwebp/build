#!/opt/pwn.college/bash
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=libwebp
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf $SRC/$PROJECT_NAME
rm -rf $SRC/libwebp-test-data

#apt-get update && apt-get install -y autoconf make libtool zip
#git clone https://chromium.googlesource.com/webm/libwebp
#git clone https://chromium.googlesource.com/webm/libwebp-test-data
#wget https://storage.googleapis.com/downloads.webmproject.org/webp/testdata/fuzzer/fuzz_seed_corpus.zip

cp -r /opt/fuzz-targets/libwebp /src
cp -r /opt/fuzz-targets/libwebp-test-data /src
cp -r /opt/fuzz-targets/fuzz_seed_corpus.zip /src

unzip fuzz_seed_corpus.zip -d libwebp-test-data/
rm fuzz_seed_corpus.zip

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

patch -tuN /src/build.sh -i /challenge/.build.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/tests/fuzzer/enc_dec_fuzzer.cc $SRC/$PROJECT_NAME/tests/fuzzer/new_fuzzer.cc
   cp $SRC/$PROJECT_NAME/tests/fuzzer/* /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/* $SRC/$PROJECT_NAME/tests/fuzzer
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi

sudo --preserve-env compile
drivers
