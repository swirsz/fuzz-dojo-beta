#!/opt/pwn.college/bash
echo 9 > /tmp/initial
echo 14 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=libssh2
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf $SRC/$PROJECT_NAME

#apt-get -y install automake libtool libssl-dev zlib1g-dev
#git clone --depth 1 https://github.com/libssh2/libssh2.git $SRC/libssh2
cp -r /opt/fuzz-targets/libssh2 $SRC

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
patch -tuN $SRC/$PROJECT_NAME/tests/ossfuzz/ossfuzz.sh -i /challenge/.ossfuzz.patch -r -
patch -tuN $SRC/$PROJECT_NAME/tests/ossfuzz/Makefile.am -i /challenge/.Makefile.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/tests/ossfuzz/ssh2_client_fuzzer.cc $SRC/$PROJECT_NAME/tests/ossfuzz/new_fuzzer.cc
   cp $SRC/$PROJECT_NAME/tests/ossfuzz/*.cc /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/tests/ossfuzz/Makefile.am /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/tests/ossfuzz/ossfuzz.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.cc $SRC/$PROJECT_NAME/tests/ossfuzz
   cp /home/hacker/$PROJECT_NAME/Makefile.am $SRC/$PROJECT_NAME/tests/ossfuzz
   cp /home/hacker/$PROJECT_NAME/ossfuzz.sh $SRC/$PROJECT_NAME/tests/ossfuzz
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers
