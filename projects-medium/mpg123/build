#!/opt/pwn.college/bash
echo 38 > /tmp/initial
echo 43 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=mpg123
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf $SRC/$PROJECT_NAME
#apt-get update && apt-get install -y make autoconf automake libtool wget bzip2
#wget https://www.mpg123.de/snapshot
cp /opt/fuzz-targets/snapshot/* $SRC
tar -xvf snapshot
mv mpg123* mpg123

cp /opt/oss-fuzz/projects/$PROJECT_NAME/read_fuzzer.c $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/decode_fuzzer.cc $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -

cd $SRC
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/decode_fuzzer.cc $SRC/new_fuzzer.cc
   cp $SRC/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/*.cc /home/hacker/$PROJECT_NAME
   #cp $SRC/$PROJECT_NAME/tests/fuzz/CMakeLists.txt /home/hacker/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC
   cp /home/hacker/$PROJECT_NAME/*.cc $SRC
   #cp /home/hacker/$PROJECT_NAME/CMakeLists.txt $SRC/$PROJECT_NAME/tests/fuzz
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers
