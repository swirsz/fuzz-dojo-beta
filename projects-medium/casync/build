#!/opt/pwn.college/bash
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=casync
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update && apt-get install -y python3-pip pkg-config wget \
#        liblzma-dev libzstd-dev libcurl4-openssl-dev libssl-dev libudev-dev \
#        zlib1g-dev libacl1-dev libfuse-dev rsync udev 
#    pip3 install meson ninja
#git clone --depth 1 https://github.com/systemd/casync casync
cp -r /opt/fuzz-targets/casync /src

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC

#patch -tuN $SRC/casync/test/fuzz/meson.build -i /challenge/.build.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   patch -tuN $SRC/casync/test/fuzz/meson.build -i /challenge/.build.patch -r -
   cp $SRC/casync/test/fuzz/fuzz-compress.c $SRC/casync/test/fuzz/fuzz-new.c
   cp $SRC/casync/test/fuzz/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/casync/test/fuzz/*.h /home/hacker/$PROJECT_NAME
   cp $SRC/casync/test/fuzz/*.build /home/hacker/$PROJECT_NAME
   cp $SRC/casync/tools/oss-fuzz.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC/casync/test/fuzz
   cp /home/hacker/$PROJECT_NAME/*.h $SRC/casync/test/fuzz
   cp /home/hacker/$PROJECT_NAME/*.build $SRC/casync/test/fuzz
   cp /home/hacker/$PROJECT_NAME/oss-fuzz.sh $SRC/casync/tools
fi
sudo --preserve-env compile
drivers