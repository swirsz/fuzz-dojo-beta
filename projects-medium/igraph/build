#!/opt/pwn.college/bash
echo 20 > /tmp/initial
echo 25 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=igraph
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update && apt-get install -y cmake bison flex

#git clone --branch master  https://github.com/igraph/igraph
rm -rf $SRC/igraph
rm -rf $SRC/deps
rm -rf $SRC/libxml2-2.13.5

cp -r /opt/fuzz-targets/igraph $SRC
cp /opt/fuzz-targets/libxml2-2.13.5.tar.xz $SRC

cp $SRC/$PROJECT_NAME/fuzzing/build.sh $SRC/

patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
patch -tuN $SRC/igraph/fuzzing/CMakeLists.txt -i /challenge/.CMakeLists.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/fuzzing/write_all_gml.cpp $SRC/$PROJECT_NAME/fuzzing/newfuzzer.cpp
   cp $SRC/$PROJECT_NAME/fuzzing/*.cpp /home/hacker/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.cpp $SRC/$PROJECT_NAME/fuzzing
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi

mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers
