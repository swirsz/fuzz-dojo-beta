#!/opt/pwn.college/bash
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
    export LABEL=$1$FUZZING_ENGINE
else
    . /usr/local/sbin/e
    export LABEL=$1
fi
export PROJECT_NAME=minizip
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'

if [ ! -d "/src-orig" ]; then
    #apt-get update && apt-get install -y make cmake pkg-config libssl-dev:i386
    #git clone -b develop https://github.com/zlib-ng/minizip-ng minizip
    cp -r /opt/fuzz-targets/minizip $SRC

    cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/build.sh $SRC/

    cp $SRC/$PROJECT_NAME/test/fuzz/unzip_fuzzer.c $SRC/$PROJECT_NAME/test/fuzz/new_fuzzer.c
    patch -tuN $SRC/minizip/CMakeLists.txt -i /challenge/.CMakeLists.patch -r -
    echo Please wait, creating /src-orig
    chown -hR hacker:hacker $SRC
    mv /src /src-orig
fi
if [ ! -d "/src-$LABEL" ]; then
    echo Please wait, creating /src-$LABEL
    cp -r /src-orig /src-$LABEL
fi
mv /src-$LABEL /src

cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/test/fuzz/*.c /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
   chown -R hacker /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.c $SRC/$PROJECT_NAME/test/fuzz
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/fuzz-dojo/$PROJECT_NAME
sudo --preserve-env compile
drivers
chown -hR hacker:hacker $SRC /home/hacker/fuzz-dojo /home/hacker/.log /out
mv /src /src-$LABEL
