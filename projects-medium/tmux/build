#!/opt/pwn.college/bash
echo 12 > /tmp/initial
echo 17 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=tmux
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update && apt-get install -y autoconf automake bison pkg-config ncurses-dev libtool
rm -rf libevent
rm -rf tmux
rm -rf /work
mkdir -p /work && chmod a+rwx /work

#git clone https://github.com/libevent/libevent.git
cp -r /opt/fuzz-targets/libevent /src
    cd libevent && \
    mkdir build && \
    cd build && \
    cmake -DEVENT__DISABLE_MBEDTLS=ON -DEVENT__DISABLE_OPENSSL=ON -DEVENT__LIBRARY_TYPE=STATIC ../ && \
    make && make install
    
cd $SRC
#git clone --depth 1 https://github.com/tmux/tmux.git
#git clone --depth 1 https://github.com/tmux/tmux-fuzzing-corpus.git
cp -r /opt/fuzz-targets/tmux /src
cp -r /opt/fuzz-targets/tmux-fuzzing-corpus /src

cp -r /src /out
cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

patch -tuN $SRC/$PROJECT_NAME/Makefile.am -i /challenge/.Makefile.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/fuzz/input-fuzzer.c $SRC/$PROJECT_NAME/fuzz/new-fuzzer.c
   cp $SRC/$PROJECT_NAME/fuzz/input-fuzzer.dict $SRC/$PROJECT_NAME/fuzz/new-fuzzer.dict
   cp $SRC/$PROJECT_NAME/fuzz/input-fuzzer.options $SRC/$PROJECT_NAME/fuzz/new-fuzzer.options
   cp $SRC/$PROJECT_NAME/fuzz/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/fuzz/*.dict /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/Makefile.am /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC/$PROJECT_NAME/fuzz
   cp /home/hacker/$PROJECT_NAME/*.dict $SRC/$PROJECT_NAME/fuzz
   cp /home/hacker/$PROJECT_NAME/Makefile.am $SRC/$PROJECT_NAME
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.vnc/$PROJECT_NAME-$(TZ=US/Arizona date +"%F--%H-%M-%S") /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers