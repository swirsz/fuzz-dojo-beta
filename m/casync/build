#!/opt/pwn.college/bash
. /usr/local/sbin/e
export LABEL=$1
export PROJECT_NAME=casync
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
    #apt-get update && apt-get install -y python3-pip pkg-config wget \
    #        liblzma-dev libzstd-dev libcurl4-openssl-dev libssl-dev libudev-dev \
    #        zlib1g-dev libacl1-dev libfuse-dev rsync udev 
    #    pip3 install meson ninja
    #git clone --depth 1 https://github.com/systemd/casync casync
    cp -r /downloads/casync $SRC

    cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/build.sh $SRC

    patch -tuN $SRC/casync/test/fuzz/meson.build -i /challenge/.build.patch -r -
    cp $SRC/casync/test/fuzz/fuzz-compress.c $SRC/casync/test/fuzz/fuzz-new.c
    #patch -tuN $SRC/casync/test/fuzz/meson.build -i /challenge/.build.patch -r -
    echo Please wait, creating /src-orig
    find $SRC -not -user hacker -print | xargs -n 100 -P 8 chown hacker:hacker
    mv /src /src-orig
fi
if [ ! -d "/src-$LABEL" ]; then
    echo Please wait, creating /src-$LABEL
    cp -r /src-orig /src-$LABEL
fi
mv /src-$LABEL /src

cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/casync/test/fuzz/*.c /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/casync/test/fuzz/*.h /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/casync/test/fuzz/*.build /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/casync/tools/oss-fuzz.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
   chown -R hacker /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.c $SRC/casync/test/fuzz
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.h $SRC/casync/test/fuzz
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.build $SRC/casync/test/fuzz
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/oss-fuzz.sh $SRC/casync/tools
fi
fuzzlog
compile
drivers
mv /src /src-$LABEL