#!/opt/pwn.college/bash
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
    export LABEL=$1$FUZZING_ENGINE
else
    . /usr/local/sbin/e
    export LABEL=$1
fi
export PROJECT_NAME=libvnc
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
    #apt-get update && apt-get install -y cmake zlib1g-dev
    #git clone --depth 1 https://github.com/LibVNC/libvncserver.git
    cp -r /downloads/libvncserver $SRC

    cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/build.sh $SRC/
    cp $SRC/libvncserver/test/fuzz_server.c $SRC/libvncserver/test/fuzz_new.c
    patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
    patch -tuN $SRC/libvncserver/CMakeLists.txt -i /challenge/.CMakeLists.patch -r -
    echo Please wait, creating /src-orig
    chown -hR hacker:hacker $SRC
    mv /src /src-orig
fi
if [ ! -d "/src-$LABEL" ]; then
    echo Please wait, creating /src-$LABEL
    cp -r /src-orig /src-$LABEL
fi
mv /src-$LABEL /src
rm -rf $SRC/libvncserver/build

cd $SRC/libvncserver
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/libvncserver/test/*.c /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/libvncserver/CMakeLists.txt /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
   chown -R hacker /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.c $SRC/libvncserver/test
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/CMakeLists.txt $SRC/libvncserver
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/fuzz-dojo/$PROJECT_NAME
compile
drivers
chown -hR hacker:hacker $SRC /home/hacker/fuzz-dojo /home/hacker/.log /out
mv /src /src-$LABEL
