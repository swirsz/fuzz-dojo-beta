#!/opt/pwn.college/bash
. /usr/local/sbin/e
LABEL=$1
PROJECT_NAME=libpng
SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    SANITIZER='none'
    LABEL='none'
fi

SRC=/src-$LABEL
if [ -z "$(find /out -mindepth 1 -maxdepth 1)" ] || [ ! -d "$SRC" ]; then
    echo "Run /challenge/build first"
else 

if [ "$LABEL" = "none" ]; then
    FLAGS=""
elif [ "$LABEL" = "address" ]; then
    FLAGS=$SANITIZER_FLAGS_address
elif [ "$LABEL" = "memory" ]; then
    FLAGS=$SANITIZER_FLAGS_memory
elif [ "$LABEL" = "undefined" ]; then
    FLAGS=$SANITIZER_FLAGS_undefined
elif [ "$LABEL" = "thread" ]; then
    FLAGS=$SANITIZER_FLAGS_thread
fi
set -ex

cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.cc $SRC/$PROJECT_NAME/contrib/oss-fuzz

cd $SRC/$PROJECT_NAME

clang++ -O1 -fno-omit-frame-pointer -gline-tables-only $FLAGS -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I. $SRC/libpng/contrib/oss-fuzz/libpng_new_fuzzer.cc -o /out/libpng_new_fuzzer -lFuzzingEngine .libs/libpng16.a -lz

drivers
fi
