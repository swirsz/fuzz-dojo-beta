#!/opt/pwn.college/bash
. /usr/local/sbin/e
export LABEL=$1
export PROJECT_NAME=gfwx
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
    mkdir $SRC/tmp
    cp $SRC/gfwx/Makefile $SRC/tmp
    cp $SRC/gfwx/*.zip $SRC/tmp
    cp $SRC/gfwx/*.cpp $SRC/tmp
    rm -rf $SRC/$PROJECT_NAME
    #apt-get update && apt-get install -y make autoconf automake libtool
    #git clone --depth 1 https://github.com/guidovranken/gfwx-fuzzers.git gfwx
    cp -r /downloads/gfwx $SRC
    mv -f $SRC/tmp/* $SRC/gfwx
    rmdir $SRC/tmp

    cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/build.sh $SRC/

    cp $SRC/$PROJECT_NAME/decoder.cpp $SRC/$PROJECT_NAME/newfuzzer.cpp
    cp $SRC/$PROJECT_NAME/fuzzer-decoder_seed_corpus.zip $SRC/$PROJECT_NAME/newfuzzer_seed_corpus.zip
   
    echo Please wait, creating /src-orig
    find $SRC -not -user hacker -print | sudo xargs -n 100 -P 8 chown hacker:hacker
    mv /src /src-orig
fi
if [ ! -d "/src-$LABEL" ]; then
    echo Please wait, creating /src-$LABEL
    cp -r /src-orig /src-$LABEL
fi
mv /src-$LABEL /src

cd $SRC/$PROJECT_NAME
patch -tuN $SRC/$PROJECT_NAME/Makefile -i /challenge/.Makefile.patch -r -
patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/* /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
   chown -R hacker /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/* $SRC/$PROJECT_NAME
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
fuzzlog
compile
drivers
mv /src /src-$LABEL
