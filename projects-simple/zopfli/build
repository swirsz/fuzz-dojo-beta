#!/opt/pwn.college/bash
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=zopfli
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'

if [ ! -d "/src-orig" ]; then
    rm -rf $SRC/zopfli
    #apt-get update && apt-get install -y make autoconf automake libtool
    #git clone --depth 1 https://github.com/google/zopfli
    cp -r /opt/fuzz-targets/zopfli $SRC

    cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/*.cc $SRC/

    cp $SRC/zopfli_compress_fuzzer.cc $SRC/new_fuzzer.cc
    #patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
    cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/build.sh $SRC/
    echo Please wait, creating /src-orig
    chown -hR hacker:hacker $SRC/$PROJECT_NAME
    mv /src /src-orig
fi
if [ ! -d "/src-$SANITIZER" ]; then
    echo Please wait, creating /src-$SANITIZER
    cp -r /src-orig /src-$SANITIZER
fi
mv /src-$SANITIZER /src

cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/*.cc /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
   chown -R hacker /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.cc $SRC
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/fuzz-dojo/$PROJECT_NAME
sudo --preserve-env compile
drivers
chown -hR hacker:hacker /home/hacker/fuzz-dojo
chown -hR hacker:hacker $SRC/$PROJECT_NAME
mv /src /src-$SANITIZER
