#!/opt/pwn.college/bash
echo 76 > /tmp/initial
echo 81 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=zopfli
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf /src/zopfli
#apt-get update && apt-get install -y make autoconf automake libtool
#git clone --depth 1 https://github.com/google/zopfli
cp -r /opt/fuzz-targets/zopfli /src

cp /opt/oss-fuzz/projects/$PROJECT_NAME/*.cc $SRC/

#patch -tuN /src/build.sh -i /challenge/.build.patch -r -
cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/zopfli_compress_fuzzer.cc $SRC/new_fuzzer.cc
   cp $SRC/*.cc /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.cc $SRC
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
sudo --preserve-env compile
drivers
