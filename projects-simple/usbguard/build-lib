#!/opt/pwn.college/bash
. /usr/local/sbin/e
export PROJECT_NAME=usbguard
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update && apt-get install -y make autoconf automake libtool pkg-config libxml2-utils1 libxml2-dev xsltproc \
#  libprotobuf-dev protobuf-compiler libdbus-1-dev libdbus-glib-1-dev libgio2.0-cil-dev libgcrypt20-dev \
#  libpolkit-gobject-1-dev libseccomp-dev libcap-ng-dev

#git clone https://github.com/ClusterLabs/libqb && cd libqb && \
#    ./autogen.sh && ./configure && make && make install

cd $SRC
rm -rf $PROJECT_NAME
rm -rf inspector

#git clone --recurse-submodules --depth 1 https://github.com/USBGuard/usbguard usbguard
cp -r /opt/fuzz-targets/usbguard /src/usbguard

# This is to fix Fuzz Introspector build by using LLVM old pass manager
# re https://github.com/ossf/fuzz-introspector/issues/305
export OLD_LLVMPASS=1

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

patch -tuN $SRC/$PROJECT_NAME/src/Tests/Fuzzers/Makefile.am -i /challenge/.Makefile.patch -r -
cd $SRC/usbguard
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/src/Tests/Fuzzers/fuzzer-uevent.cpp $SRC/$PROJECT_NAME/src/Tests/Fuzzers/fuzzer-new.cpp
   cp $SRC/$PROJECT_NAME/src/Tests/Fuzzers/*.cpp /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/src/Tests/Fuzzers/Makefile.am /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.cpp $SRC/$PROJECT_NAME/src/Tests/Fuzzers
   cp /home/hacker/$PROJECT_NAME/Makefile.am $SRC/$PROJECT_NAME/src/Tests/Fuzzers
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
sudo --preserve-env compile
drivers