#!/opt/pwn.college/bash
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
    export LABEL=$1$FUZZING_ENGINE
else
    . /usr/local/sbin/e
    export LABEL=$1
fi
export PROJECT_NAME=elfutils
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
    #apt-get update && \
    #    apt-get install -y pkg-config make autoconf autopoint zlib1g-dev zlib1g-dev:i386 flex gawk bison
    #git clone --depth 1 git://sourceware.org/git/elfutils.git

    rm -rf elfutils
    cp -r /opt/fuzz-targets/elfutils $SRC
    cp -r /opt/fuzz-targets/zlib $SRC/$PROJECT_NAME

    cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/*.c $SRC/
    cp /opt/oss-fuzz-new/projects/$PROJECT_NAME/build.sh $SRC/

    patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
    cp $SRC/fuzz-libdwfl.c $SRC/fuzz-newfuzz.c
    echo Please wait, creating /src-orig
    chown -hR hacker:hacker $SRC
    mv /src /src-orig
fi
if [ ! -d "/src-$LABEL" ]; then
    echo Please wait, creating /src-$LABEL
    cp -r /src-orig /src-$LABEL
fi
mv /src-$LABEL /src

cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/*.c /home/hacker/fuzz-dojo/$PROJECT_NAME
   chown -R hacker /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.c $SRC
fi

cd $SRC/$PROJECT_NAME
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/fuzz-dojo/$PROJECT_NAME
sudo --preserve-env compile
drivers
chown -hR hacker:hacker $SRC /home/hacker/fuzz-dojo /home/hacker/.log /out
mv /src /src-$LABEL
