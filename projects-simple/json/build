#!/opt/pwn.college/bash
echo 69 > /tmp/initial
echo 74 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=json
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update && apt-get install -y binutils make
rm -rf $PROJECT_NAME
#git clone --depth 1 -b develop https://github.com/nlohmann/json.git
cp -r /opt/fuzz-targets/json /src

# This is to fix Fuzz Introspector build by using LLVM old pass manager
# re https://github.com/ossf/fuzz-introspector/issues/305
export OLD_LLVMPASS=1

cp /opt/oss-fuzz/projects/$PROJECT_NAME/parse_afl_fuzzer.dict $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/*.options $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

patch -tuN $SRC/$PROJECT_NAME/tests/Makefile -i /challenge/.Makefile.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/tests/src/fuzzer-parse_ubjson.cpp $SRC/$PROJECT_NAME/tests/src/fuzzer-parse_new.cpp
   cp $SRC/$PROJECT_NAME/tests/src/fuzzer*.cpp /home/hacker/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/tests/Makefile /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.cpp $SRC/$PROJECT_NAME/tests/src
   cp /home/hacker/$PROJECT_NAME/Makefile $SRC/$PROJECT_NAME/tests
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.vnc/$PROJECT_NAME-$(TZ=US/Arizona date +"%F--%H-%M-%S") /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers
