#!/opt/pwn.college/bash
. /usr/local/sbin/e
if [ "$?" -gt 0 ]; then
    exit 1
fi
export LABEL=$1
export PROJECT_NAME=arduinojson
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
#----------------------------------------------------------------------
    #apt-get update && apt-get install -y make zip git
    rm -rf $SRC/$PROJECT_NAME
    #git clone --depth 1 https://github.com/bblanchon/ArduinoJson.git arduinojson
    cp -r /downloads/arduinojson $SRC

    cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

#----------------------------------------------------------------------
    build-cleanup
fi
build-srcfolders
mv /src-$LABEL /src

cd $SRC/$PROJECT_NAME
#----------------------------------------------------------------------
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/extras/fuzzing/CMakeLists.txt /home/hacker/fuzz-dojo/$PROJECT_NAME/CMakeLists.txt
   cp $SRC/$PROJECT_NAME/extras/fuzzing/Makefile /home/hacker/fuzz-dojo/$PROJECT_NAME/Makefile
   cp $SRC/$PROJECT_NAME/extras/fuzzing/*.cpp /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.cpp $SRC/$PROJECT_NAME/extras/fuzzing
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/CMakeLists.txt $SRC/$PROJECT_NAME/extras/fuzzing
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/Makefile $SRC/$PROJECT_NAME/extras/fuzzing
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
#----------------------------------------------------------------------
mv /src /src-$LABEL
chown -hR hacker:hacker /src-$LABEL /home/hacker/fuzz-dojo /home/hacker/.log /out
if [ -e "/tmp/build.lck" ]; then
  rm /tmp/build.lck
fi
echo
echo "###"
echo "###  Understanding Fuzz Drivers"
echo "###"
echo
echo Fuzz drivers for $PROJECT_NAME have been copied into ~/fuzz-dojo/$PROJECT_NAME
echo
echo Edit each of these files and add comments to the code to demonstrate
echo your understanding of their operation.   A flag will be provided when
echo sufficient comments are added to each driver, and your comments will
echo be evaluated later.
echo
cd ~/fuzz-dojo/$PROJECT_NAME
DRIVERS=($(ls -p *.cpp | grep -v /))
for driver in "${DRIVERS[@]}"
do
    COUNT=0
    sort ~/fuzz-dojo/arduinojson/json_fuzzer.cpp > /tmp/file1.sorted
    sort /src-orig/arduinojson/extras/fuzzing/json_fuzzer.cpp > /tmp/file2.sorted
    COUNT=$(comm -23 /tmp/file1.sorted /tmp/file2.sorted | wc -w)
    rm /tmp/file1.sorted /tmp/file2.sorted
    if test $COUNT -gt 10
    then
        echo Examining $driver $count
    else
        echo Add more comments to $driver - word count: $COUNT
        echo
        exit 0
    fi
done
cat /flag
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME-Understanding /home/hacker/fuzz-dojo/$PROJECT_NAME > /dev/null
