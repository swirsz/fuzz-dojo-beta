#!/opt/pwn.college/bash
. /usr/local/sbin/e
export LABEL=$1
export PROJECT_NAME=lighttpd1.4
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
    rm -rf $SRC/$PROJECT_NAME
    #apt-get update && apt-get install -y libz-dev libpcre2-dev libtool pkg-config autoconf
    #git clone https://github.com/lighttpd/lighttpd1.4
    cp -r /downloads/lighttpd1.4 $SRC

    cp /opt/oss-fuzz-new/projects/lighttpd/build.sh $SRC/
    cp /opt/oss-fuzz-new/projects/lighttpd/fuzz_* $SRC/
    cp $SRC/fuzz_burl.c $SRC/fuzz_new.c

    patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
    echo Please wait, creating /src-orig
    find $SRC -not -user hacker -print | xargs -n 100 -P 8 chown hacker:hacker
    mv /src /src-orig
fi
if [ ! -d "/src-$LABEL" ]; then
    echo Please wait, creating /src-$LABEL
    cp -r /src-orig /src-$LABEL
fi
mv /src-$LABEL /src

cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/*.c /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
   chown -R hacker /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.c $SRC
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-lighttpd /home/hacker/fuzz-dojo/$PROJECT_NAME
compile
drivers
mv /src /src-$LABEL
