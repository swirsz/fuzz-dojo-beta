#!/opt/pwn.college/bash
. /usr/local/sbin/e
export LABEL=$1
export PROJECT_NAME=exiv2
export SANITIZER=$1
if [ -z "$SANITIZER" ]; then
    export SANITIZER='none'
    export LABEL='none'$LABEL
fi

if [ ! -d "/src-orig" ]; then
    rm -rf $SRC/$PROJECT_NAME
    #git clone https://github.com/Exiv2/exiv2 exiv2
    #./exiv2/ci/install_dependencies.sh
    #apt-get install -y cmake ninja-build g++ ---clang--- libexpat1-dev zlib1g-dev libbrotli-dev libssh-dev libcurl4-openssl-dev libgmock-dev libxml2-utils libinih-dev
    cp -r /downloads/exiv2 $SRC

    cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

    patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
    patch -tuN $SRC/$PROJECT_NAME/fuzz/CMakeLists.txt -i /challenge/.CMakeLists.patch -r -
    cp $SRC/$PROJECT_NAME/fuzz/fuzz-read-print-write.cpp $SRC/$PROJECT_NAME/fuzz/fuzz-newfuzzer.cpp

    build-cleanup
fi
build-srcfolders
mv /src-$LABEL /src

cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/fuzz-dojo/$PROJECT_NAME" ]; then
   mkdir -p /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/$PROJECT_NAME/fuzz/*.cpp /home/hacker/fuzz-dojo/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/fuzz-dojo/$PROJECT_NAME
   chown -R hacker /home/hacker/fuzz-dojo/$PROJECT_NAME
else
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/*.cpp $SRC/$PROJECT_NAME/fuzz
   cp /home/hacker/fuzz-dojo/$PROJECT_NAME/build.sh $SRC
fi
fuzzlog
compile
drivers
mv /src /src-$LABEL
