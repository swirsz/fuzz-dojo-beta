id: fuzz

name: Fuzz Dojo
type: public
award:
  emoji: üêá

image: stevenwirsz/fuzz-dojo:latest

description: |

        Forum link: https://discord.com/channels/750635557666816031/1409993436328759328

        Fuzzing is a powerful technique used in both academia and industry to automate software testing.  It has also become the standard approach for discovering zero-day vulnerabilities.  Google considers fuzzing to be their first line of defense, and has built an open source version of their fuzzing platform, known as OSS-Fuzz, to continually test popular open source software.  OSS-Fuzz has been used successfully in over a thousand projects.  However, due to its limitations, only about 30% of the code typically gets tested, leaving 70% unevaluated.

        You will learn in this dojo how to create and improve fuzz testing drivers for real-world software.  You will have access to a wide array of training materials and have the opportunity to create two new real fuzz drivers, with the option to submit your work to Google for a monetary compensation of up to $10,000.  New fuzz drivers should increase the overall project code coverage, cover a wide range of API functions and data dependencies, and achieve a good speed of executions/sec.

        Initial Survey https://forms.gle/FWF1iEn9pLpkRMGq9 
        
        Exit Survey https://forms.gle/uG8yik8pXFRXQHSGA  
        
        The first 30 participants to complete the module and the surveys will be rewarded with a $50 Amazon gift card upon completion of the study.  Valid contact information required.  Limit 1 submission per person.
        
        The Bash (Bourne Again SHell) is required for some of these challenges.  This is the default shell unless you change it.
        
        In the interest of this study's integrity, please refrain from exploiting any bugs or vulnerabilities discovered during testing.

modules:

  - id: consent
    name: Consent Form
    description: Contribute by allowing your anonymous, non-personalized work in this module to be used for research

    challenges:

      - id: consent
        name: Consent
        description:  Run /challenge/run in Terminal to start.

  - id: training
    name: Introduction to Fuzzing
    description: |

        Important Resources:
        - [LibFuzzer Documentation](https://llvm.org/docs/LibFuzzer.html)
        - [More libfuzzer tips](https://chromium.googlesource.com/chromium/src/+/main/testing/libfuzzer/getting_started_with_libfuzzer.md)
        - [Efficient Fuzzing Guide](https://chromium.googlesource.com/chromium/src/+/main/testing/libfuzzer/efficient_fuzzing.md)
        - [**OSS-Fuzz**: Fuzzing Introspection](https://introspector.oss-fuzz.com/projects-overview)
        - [**OSS-Fuzz**: OSS-Fuzz - Setting up a new project](https://google.github.io/oss-fuzz/getting-started/new-project-guide/)
        - [**OSS-Fuzz**: Ideal integration](https://google.github.io/oss-fuzz/advanced-topics/ideal-integration/)
        - [**OSS-Fuzz**: Interesting fuzz driver creation case studies](https://github.com/ossf/fuzz-introspector/blob/main/doc/CaseStudies.md)
        - [**GITHUB**: How to contribute to a project through forking](https://docs.github.com/en/get-started/quickstart/contributing-to-projects)
        - [Keyword Search all OSS-Fuzz fuzz drivers](https://github.com/search?q=repo%3Agoogle%2Foss-fuzz+path%3A%2F%5Eprojects%5C%2F%2F++AND+%28language%3AC%2B%2B+OR+language%3AC%29&type=code)

    resources:
        
      - name: "pwn.college - Getting Started"
        type: lecture
        video: DJO1A2neZ6Y

      - name: "Introduction to Fuzzing"
        type: lecture
        video: K_2DAo5pPQQ

      - name: "Fuzz Dojo only: Building and Running Reports"
        type: lecture
        video: u7GrifELIjU
        slides: 1-JxZd7rNU8JBiCdbyfg37YrJM0w70jOx3-2vAZg0hx0

      - name: "OSS Fuzz only: Building and Running Reports"
        type: lecture
        video: gvA0cXxG4cg
        slides: 1eJ7y0pYSBVFg9cT353-IPF8FHI0AWGfpTh0vKcrlLk8

      - name: "Investigating a Project & Picking Functions to Fuzz"
        type: lecture
        video: OP22mPweQbU
        slides: 1nJ82sezXrM9U0TWRJmCKyhaX38ySCO2v34q3kxyxZTA

      - name: "AVAHI: Understanding Existing Fuzz Drivers"
        type: lecture
        video: AtjkUvYOGJw

      - name: "AVAHI: New Fuzz Driver Creation"
        type: lecture
        video: 11fxFrOOLJ0

      - name: "BZIP2: Case Study Extending 62% Static Code Coverage to 92%"
        type: lecture
        video: LRpm2kd9vQI

      - name: "cJSON: Case Study extending 27% Static Code Coverage to 70%"
        type: lecture
        video: KOHb0y_Oiko
        slides: 1Da3GXF5fJjJdF5JhO6VDYcNbz3wCSXOLJPKueyCdEBw

      - name: "Submitting your fuzz driver to Google"
        type: lecture
        slides: 1wY-6xqYhhzf4uf272UMjHPh8KZ4sc1fjgcKuGrsa4ks

    challenges:

      - id: 1-locate
        name: Locate Harnesses
        description: Locate the fuzz harnesses in a project.  Run /challenge/training in Terminal to start.

      - id: 2-change
        name: Modify a Fuzzing Harness
        description: Make a change to a fuzzing harness.  Run /challenge/training in Terminal to start.

      - id: 3-broken
        name: Fix Broken Fuzzing Harness
        description: Repair a broken fuzzing harness.  Run /challenge/training in Terminal to start.

      - id: 4-parameters
        name: Initial Parameters
        description: Increase code coverage by selecting better initial parameters.  Run /challenge/training in Terminal to start.

      - id: 5-calltree
        name: Improve Coverage Using the Call Tree
        description: Find a function higher in the call tree that calls this function and fuzz it instead.  Run /challenge/training in Terminal to start.

      - id: 6-seedcorpus
        name: Implement Seed Corpus
        description: Implement a seed corpus.  Run /challenge/training in Terminal to start.

      - id: 7-newdriver
        name: Create New Fuzz Driver
        description: Search for unreached code within a project and create a simple fuzz driver to increase total project code coverage.  Run /challenge/training in Terminal to start.

      - id: 8-oss-build
        name: OSS-Fuzz - Build a Project
        description: OSS-Fuzz challenges simulate a clean linux setup with only the OSS-Fuzz library available. Learn how to compile a project using only OSS-Fuzz.

      - id: 9-oss-loc
        name: OSS-Fuzz - Code Coverage
        description: Run a code coverage report in this challenge

      - id: 10-oss-fi
        name: OSS-Fuzz - Fuzz Introspector
        description: Run a Fuzz Introspector report

      - id: 11-add-newfuzzer
        name: OSS-Fuzz - Add new_fuzzer
        description: Go through the steps to add a new fuzz driver to an existing OSS-Fuzz project

  - id: exercises
    progression_locked: true
    name: Real World Fuzzing
    
    challenges:

      - id: level-1-0
        name: Level 1.0 Practice

      - id: level-1-1
        name: Level 1.1 Practice

      - id: level-2-0
        name: Level 2.0 Project

      - id: level-2-1
        name: Level 2.1 Project
