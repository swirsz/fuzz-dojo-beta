#!/opt/pwn.college/bash
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fiafl
export PROJECT_NAME=graphicsmagick
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

apt-get update && \
    apt-get install -y \
    mercurial \
    automake \
    autopoint \
    cmake \
    libtool \
    nasm \
    pkg-config \
    po4a \
    ninja-build \
    libgflags-dev \
    yasm

# GraphicsMagick
hg clone --time -b default https://foss.heptapod.net/graphicsmagick/graphicsmagick graphicsmagick || \
    hg clone --time -b default https://foss.heptapod.net/graphicsmagick/graphicsmagick graphicsmagick || \
    hg clone --time -b default https://foss.heptapod.net/graphicsmagick/graphicsmagick graphicsmagick

# Libtiff
git clone --depth 1 https://gitlab.com/libtiff/libtiff

# h.265 codec implementation needed by libheif
git clone --depth 1 https://github.com/strukturag/libde265 || \
    printf "https://github.com/strukturag/libde265 is not available!\n"

# x265 HEVC Encoder needed by libheif
git clone --depth 1 https://bitbucket.org/multicoreware/x265_git.git x265 || \
    printf "https://bitbucket.org/multicoreware/x265_git.git is not available!\n"

# AV1 Codec Library needed by libheif
git clone --depth 1 --branch master https://aomedia.googlesource.com/aom aom || \
    printf "https://aomedia.googlesource.com/aom is not available!\n"

# Libheif
git clone --depth 1 https://github.com/strukturag/libheif

# WebP
git clone --depth 1 https://github.com/webmproject/libwebp

# Zlib
git clone --depth 1 https://github.com/madler/zlib

# XZ
git clone --depth 1 https://github.com/xz-mirror/xz

# Zstd
git clone --depth 1 https://github.com/facebook/zstd

# libjpeg-turbo
git clone --depth 1 https://github.com/libjpeg-turbo/libjpeg-turbo

# Freetype
git clone --depth 1 https://github.com/freetype/freetype

# Libpng
git clone --depth 1 https://github.com/pnggroup/libpng

# Little-CMS
git clone --depth 1 https://github.com/mm2/Little-CMS

# Bzip2
git clone --depth 1 https://gitlab.com/federicomenaquintero/bzip2.git

# Jasper
git clone --depth 1 https://github.com/jasper-software/jasper

# Libxml2
git clone --depth 1 https://gitlab.gnome.org/GNOME/libxml2.git

# Libjxl
git clone --depth 1 https://github.com/libjxl/libjxl.git

# Libjxl sub-repositories
# Borrowed from projects/libjxl/Dockerfile
git -C libjxl submodule update --init --recommend-shallow \
  third_party/brotli \
  third_party/highway \
  third_party/libjpeg-turbo \
  third_party/skcms

# JBIG-kit
git clone https://www.cl.cam.ac.uk/~mgk25/git/jbigkit # does not support shallow


cp -r /opt/fuzz-targets/cyclonedds /src/
cp -r /opt/fuzz-targets/cyclonedds /src/
cp -r /opt/fuzz-targets/cyclonedds /src/
cp -r /opt/fuzz-targets/cyclonedds /src/
cp -r /opt/fuzz-targets/cyclonedds /src/


cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

#patch -tuN /src/build.sh -i /challenge/.build.patch -r -
cd $SRC/$PROJECT_NAME

sudo --preserve-env compile
drivers
