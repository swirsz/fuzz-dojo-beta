#!/opt/pwn.college/bash
echo 27 > /tmp/initial
echo 32 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=cfengine
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf $SRC/core
#apt-get update && apt-get install -y build-essential autoconf automake libssl-dev \
#    libpcre3 libpcre3-dev bison libbison-dev libacl1 libacl1-dev libpq-dev lmdb-utils \
#    liblmdb-dev libpam0g-dev flex libtool

#git clone --depth 1 https://github.com/cfengine/core --recursive
cp -r /opt/fuzz-targets/core /src

cp /opt/oss-fuzz/projects/$PROJECT_NAME/string_fuzzer.c $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

#patch -tuN $SRC/core/tests/fuzz/CMakeLists.txt -i /challenge/.CMakeLists.patch -r -

cd $SRC/core
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/string_fuzzer.c $SRC/new_fuzzer.c
   cp $SRC/*.c /home/hacker/$PROJECT_NAME
   #cp $SRC/core/tests/fuzz/CMakeLists.txt /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC
   #cp /home/hacker/$PROJECT_NAME/CMakeLists.txt $SRC/core/tests/fuzz
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.vnc/$PROJECT_NAME-$(TZ=US/Arizona date +"%F--%H-%M-%S") /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers
