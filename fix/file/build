#!/opt/pwn.college/bash
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=file
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update && apt install -y make autoconf automake libtool shtool
#apt-get update && apt install -y libbz2-dev      liblzma-dev      zlib1g-dev      libzstd-dev      liblz4-dev
#apt-get update && apt install -y libbz2-dev:i386 liblzma-dev:i386 zlib1g-dev:i386 libzstd-dev:i386 liblz4-dev:i386 

rm -rf $PROJECT_NAME
rm -rf binary-samples
rm -rf pocs
#git clone --depth 1 https://github.com/file/file.git

# Supplement file's existing test files
#git clone --depth 1 https://github.com/DavidKorczynski/binary-samples.git
#git clone --depth 1 https://github.com/corkami/pocs

cp -r /opt/fuzz-targets/file /src
cp -r /opt/fuzz-targets/binary-samples /src
cp -r /opt/fuzz-targets/pocs /src

cp /opt/oss-fuzz/projects/$PROJECT_NAME/fuzzer_temp_file.h $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/magic_fuzzer.cc $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/magic_fuzzer_loaddb.cc $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/magic_fuzzer_fd.cc $SRC/

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

#patch -tuN /src/build.sh -i /challenge/.build.patch -r -
cd $SRC/$PROJECT_NAME
sudo --preserve-env compile
drivers
