#!/opt/pwn.college/bash
echo 999 > /tmp/initial
echo 999 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fiafl
export PROJECT_NAME=gstreamer
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update && \
#   apt-get install -y make autoconf automake libtool build-essential pkg-config bison flex patchelf \
#   python3-pip ninja-build && \
#   pip3 install meson==1.2.3

#git clone --depth 1 https://gitlab.xiph.org/xiph/vorbis.git vorbis
#git clone --depth 1 https://gitlab.xiph.org/xiph/ogg.git ogg
#git clone --depth 1 https://gitlab.xiph.org/xiph/theora.git theora

# Checkout repository
#git clone --depth 1 --recursive https://gitlab.freedesktop.org/gstreamer/gstreamer.git gstreamer

cp -r /opt/fuzz-targets/vorbis $SRC/
cp -r /opt/fuzz-targets/ogg $SRC/
cp -r /opt/fuzz-targets/theora $SRC/
cp -r /opt/fuzz-targets/gstreamer $SRC/
cp -r /opt/fuzz-targets/zlib $SRC/
cp -r /opt/fuzz-targets/zlib-1.2.13.tar.gz $SRC/$PROJECT_NAME
cp -r /opt/fuzz-targets/zlib_1.2.13-2_patch.zip $SRC/$PROJECT_NAME

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

#patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
cd $SRC/$PROJECT_NAME
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers
