#!/opt/pwn.college/bash
echo 27 > /tmp/initial
echo 32 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=ruby
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf $SRC/$PROJECT_NAME

#apt-get update -y && apt-get install -y libssl-dev libyaml-dev libreadline6-dev \
# zlib1g-dev libncurses5-dev libffi-dev bison autoconf ruby pkg-config

git clone https://github.com/ruby/ruby.git
mkdir $SRC/fuzz

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/*.rb $SRC/fuzz
cp /opt/oss-fuzz/projects/$PROJECT_NAME/*.c $SRC/fuzz
cp /opt/oss-fuzz/projects/$PROJECT_NAME/*.options $SRC/fuzz

#patch -tuN $SRC/$PROJECT_NAME/tests/fuzz/CMakeLists.txt -i /challenge/.CMakeLists.patch -r -

cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/fuzz/fuzz_ruby_gems.c $SRC/fuzz/fuzz_new.c
   cp $SRC/fuzz/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/fuzz/*.rb /home/hacker/$PROJECT_NAME
   cp $SRC/fuzz/*.options /home/hacker/$PROJECT_NAME
   #cp $SRC/fuzz/CMakeLists.txt /home/hacker/$PROJECT_NAME
   cp /src/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC/fuzz
   cp /home/hacker/$PROJECT_NAME/*.rb $SRC/fuzz
   cp /home/hacker/$PROJECT_NAME/*.options $SRC/fuzz
   #cp /home/hacker/$PROJECT_NAME/CMakeLists.txt $SRC/$PROJECT_NAME/tests/fuzz
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.vnc/$PROJECT_NAME-$(TZ=US/Arizona date +"%F--%H-%M-%S") /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers
