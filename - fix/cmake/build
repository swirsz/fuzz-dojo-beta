#!/opt/pwn.college/bash
echo 37 > /tmp/initial
echo 42 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=CMake
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf $PROJECT_NAME
rm -rf inspector
rm -rf fuzzing-corpus
#apt-get update && apt-get install -y make autoconf automake libtool pkg-config libssl-dev
#git clone --depth 1 https://gitlab.kitware.com/cmake/cmake.git $PROJECT_NAME
#git clone --depth 1 https://github.com/strongcourage/fuzzing-corpus
cp -r /downloads/cmake $SRC/$PROJECT_NAME
cp -r /downloads/fuzzing-corpus $SRC/

# This is to fix Fuzz Introspector build by using LLVM old pass manager
# re https://github.com/ossf/fuzz-introspector/issues/305
export OLD_LLVMPASS=1

cp /opt/oss-fuzz/projects/cmake/build.sh $SRC/

patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
cd $SRC/$PROJECT_NAME
if [ ! -d "/home/hacker/cmake" ]; then
   mkdir /home/hacker/cmake
   cp $SRC/$PROJECT_NAME/Tests/Fuzzing/xml_parser_fuzzer.cc $SRC/$PROJECT_NAME/Tests/Fuzzing/new_fuzzer.cc
   cp $SRC/$PROJECT_NAME/Tests/Fuzzing/*.cc /home/hacker/cmake
   cp $SRC/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/cmake/*.cc $SRC/$PROJECT_NAME/Tests/Fuzzing
   cp /home/hacker/cmake/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
compile
drivers