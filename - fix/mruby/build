#!/opt/pwn.college/bash
echo 27 > /tmp/initial
echo 32 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=mruby
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

rm -rf $SRC/mruby
rm -rf $SRC/mruby_seeds
rm -rf $SRC/libprotobuf-mutator
#apt-get update && apt-get install -y build-essential ruby bison ninja-build cmake zlib1g-dev libbz2-dev liblzma-dev
#git clone --depth 1 https://github.com/mruby/mruby mruby
#git clone --depth 1 https://github.com/bshastry/mruby_seeds.git mruby_seeds
#git clone --depth 1 https://github.com/google/libprotobuf-mutator.git

cp -r /opt/fuzz-targets/mruby $SRC/
cp -r /opt/fuzz-targets/mruby_seeds $SRC/
cp -r /opt/fuzz-targets/libprotobuf-mutator $SRC/

mkdir LPM; \
  cd LPM; \
  cmake $SRC/libprotobuf-mutator -GNinja -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON -DLIB_PROTO_MUTATOR_TESTING=OFF -DCMAKE_BUILD_TYPE=Release; \
  ninja

cp $SRC/mruby/oss-fuzz/config/mruby.dict $SRC/mruby/oss-fuzz/config/new.dict
cp $SRC/mruby/oss-fuzz/config/mruby_fuzzer.options $SRC/mruby/oss-fuzz/config/new_fuzzer.options
   
#vi $SRC/LPM/external.protobuf/tmp/external.protobuf-gitclone.cmake

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/
patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
cd $SRC
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/mruby/oss-fuzz/mruby_fuzzer.c $SRC/mruby/oss-fuzz/new_fuzzer.c
   cp $SRC/mruby/oss-fuzz/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/mruby/oss-fuzz/*.cpp /home/hacker/$PROJECT_NAME
   cp $SRC/mruby/oss-fuzz/*.h /home/hacker/$PROJECT_NAME
   cp $SRC/mruby/oss-fuzz/*.proto /home/hacker/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC/mruby/oss-fuzz
   cp /home/hacker/$PROJECT_NAME/*.cpp $SRC/mruby/oss-fuzz
   cp /home/hacker/$PROJECT_NAME/*.h $SRC/mruby/oss-fuzz
   cp /home/hacker/$PROJECT_NAME/*.proto $SRC/mruby/oss-fuzz
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers