#!/opt/pwn.college/bash
echo 999 > /tmp/initial
echo 999 > /tmp/target
if [ "$1" = "afl" ]; then
    . /usr/local/sbin/eafl
    shift
else
    . /usr/local/sbin/e
fi
export PROJECT_NAME=jsoncpp
export SANITIZER=$1
[ -z "$SANITIZER" ] && export SANITIZER='none'
cd $SRC

#apt-get update -y && apt-get install -y curl wget binutils cmake ninja-build liblzma-dev libz-dev pkg-config autoconf libtool
git clone --depth 1 https://github.com/open-source-parsers/jsoncpp
git clone --depth 1 https://github.com/google/libprotobuf-mutator.git

mkdir LPM 
cd LPM 
cmake ../libprotobuf-mutator -GNinja -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON -DLIB_PROTO_MUTATOR_TESTING=OFF -DCMAKE_BUILD_TYPE=Release 
export ninja=

# This is to fix Fuzz Introspector build by using LLVM old pass manager
# re https://github.com/ossf/fuzz-introspector/issues/305
export OLD_LLVMPASS=1

cp /opt/oss-fuzz/projects/$PROJECT_NAME/*.proto $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/*.h $SRC/
cp /opt/oss-fuzz/projects/$PROJECT_NAME/*.cc $SRC/

cp /opt/oss-fuzz/projects/$PROJECT_NAME/build.sh $SRC/

#patch -tuN $SRC/build.sh -i /challenge/.build.patch -r -
cd $SRC/jsoncpp
if [ ! -d "/home/hacker/$PROJECT_NAME" ]; then
   mkdir /home/hacker/$PROJECT_NAME
   cp $SRC/zzzzzzzzzz.c $SRC/newfuzzer.c
   cp $SRC/*.c /home/hacker/$PROJECT_NAME
   cp $SRC/*.cc /home/hacker/$PROJECT_NAME
   cp $SRC/build.sh /home/hacker/$PROJECT_NAME
   chown -R hacker /home/hacker/$PROJECT_NAME
else
   cp /home/hacker/$PROJECT_NAME/*.c $SRC
   cp /home/hacker/$PROJECT_NAME/*.cc $SRC
   cp /home/hacker/$PROJECT_NAME/build.sh $SRC
fi
mkdir -p /home/hacker/.log
[ ! "$SANITIZER" = "introspector" ] && [ ! "$SANITIZER" = "coverage" ] && zip -ry /home/hacker/.log/$(TZ=US/Arizona date +"%F--%H-%M-%S")-$PROJECT_NAME /home/hacker/$PROJECT_NAME
sudo --preserve-env compile
drivers